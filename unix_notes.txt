Git/Unix Notes 11/15

Philosophy of Unix
	-Everything is a file, incl pieces of the kernel and the hardware
	-Do one thing and do it well
	-Every output can become the input of another program

Two major components of Unix
	-Kernel - core of the OS, interacts directly with the hardware
	-The Shell - how the user interacts with the OS

	-Kernel Space
		-Represents the admin user space, directly affects hardware
		-kernel provides system calls that check permissions of the user

	-User Space
		-All that actions that aren't in Kernal Space
		-Manifests as a shell run in a terminal program

Working on the Command Line
	-Prompt = machine_name: current_directory username$
	-Paths
		-Absolute: begins with /, specifies full path
		-Relative: doesn't begin with /
	-pwd: present working directory
	-cd: change directory, specifying either absolute or relative path
	-Home Directory: /Users/henryhowes
	-cd /: takes you to the root directory

	Root
		-topmost container in the filesystem
		-absolute paths begin here
		-generally restrictedt to administrative users

	ls: lists everything in the current directory
		-Behavior of this command can be modified
		-Shows items in lexigraphical order
		-Adding flags to the command changes behavior
		- "-t" shows items from most recently modified to least
		- "-l" shows items in long form
		- You can combine flags by adding each to a single flag
		- "-r" sorts in reverse, "-rt" sorts in reverse chronological

	Flags
		-Changes the command in a single simple way but can be combined
	Man
		-Man command gives the manual page for another command
			-Ex. man ls will give you all available flags for ls
		-Use q to get out of man page

What's In a Name
	-Use "\" to escape spaces
		-But better to use underscores or dashes instead of spaces in path names
	-OSX and Windows are case insensitive but unix is case sensitive
		-In general, use all lowercase in file and directory names
History
	-history  - prints a list of recent commands
	- with | less , history is given as input to the less command
	-less helps to control movement through files

	Piping
		- The pipe (|) can be used to chain commands
	Redirection
		- Redirection operator (>) sends output from left function into right file
		-If the file doesn't exist, it's created; if it does, it is overwritten
		-If the operator is doubled (>>), then output is added to the end instead
Hidden Files
	-Any file whose names begins with "." is hidden
	-ls -a will show dot files
Git Commands
	-git add <filename> - adds the given file to the staging area
	-git commit -m "commit message here" - commits staged files to the repo

Master
  -Refers to first branch in a repository
Head
  -Refers to current branch
Git Branch <new branch name>
  -Adds a new branch, doesn't automatically checkout that new branch
  -Git branch without argument lists all branches, asterisk indicates active branch
